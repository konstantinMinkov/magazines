package com.kpi.magazines.dao.orm;

import com.kpi.magazines.dao.orm.annotations.Autogenerated;
import com.kpi.magazines.dao.orm.annotations.Column;
import com.kpi.magazines.dao.orm.annotations.Entity;
import com.kpi.magazines.dao.orm.annotations.Id;

import java.time.LocalDateTime;

/**
 * Created by Konstantin Minkov on 19.06.2016.
 */

@Entity(table = "user")
public class User {

    @Id
    @Autogenerated
    @Column("id")
    private int id;

    @Column("login")
    public String login;

    @Column("password")
    private String password;

    @Column("user_role_id")
    private int userRoleId;

    @Autogenerated
    @Column("time_created")
    private LocalDateTime timeCreated;

    @Autogenerated
    @Column("time_updated")
    private LocalDateTime timeUpdated;

    public User() { }

    public User(int id, String login, String password, int userRoleId, LocalDateTime timeCreated,
                LocalDateTime timeUpdated) {
        this.id = id;
        this.login = login;
        this.password = password;
        this.userRoleId = userRoleId;
        this.timeCreated = timeCreated;
        this.timeUpdated = timeUpdated;
    }

    public int getId() {
        return id;
    }

    public void setId(int id) {
        this.id = id;
    }

    public String getLogin() {
        return login;
    }

    public void setLogin(String login) {
        this.login = login;
    }

    public String getPassword() {
        return password;
    }

    public void setPassword(String password) {
        this.password = password;
    }

    public int getUserRoleId() {
        return userRoleId;
    }

    public void setUserRoleId(int userRoleId) {
        this.userRoleId = userRoleId;
    }

    public LocalDateTime getTimeCreated() {
        return timeCreated;
    }

    public void setTimeCreated(LocalDateTime timeCreated) {
        this.timeCreated = timeCreated;
    }

    public LocalDateTime getTimeUpdated() {
        return timeUpdated;
    }

    public void setTimeUpdated(LocalDateTime timeUpdated) {
        this.timeUpdated = timeUpdated;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;

        User user = (User) o;

        if (id != user.id) return false;
        if (userRoleId != user.userRoleId) return false;
        if (login != null ? !login.equals(user.login) : user.login != null) return false;
        if (password != null ? !password.equals(user.password) : user.password != null) return false;
        if (timeCreated != null ? !timeCreated.equals(user.timeCreated) : user.timeCreated != null) return false;
        return timeUpdated != null ? timeUpdated.equals(user.timeUpdated) : user.timeUpdated == null;

    }

    @Override
    public int hashCode() {
        int result = id;
        result = 31 * result + (login != null ? login.hashCode() : 0);
        result = 31 * result + (password != null ? password.hashCode() : 0);
        result = 31 * result + userRoleId;
        result = 31 * result + (timeCreated != null ? timeCreated.hashCode() : 0);
        result = 31 * result + (timeUpdated != null ? timeUpdated.hashCode() : 0);
        return result;
    }

    @Override
    public String toString() {
        return "User{" +
                "id=" + id +
                ", login='" + login + '\'' +
                ", password='" + password + '\'' +
                ", userRoleId=" + userRoleId +
                ", timeCreated=" + timeCreated +
                ", timeUpdated=" + timeUpdated +
                '}';
    }
}
